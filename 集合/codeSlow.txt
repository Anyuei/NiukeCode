package testNiuke;

import java.util.Scanner;

/**
 * Test09Collection.java
 * 
 * @author anyunpei 2018年4月10日下午4:09:25 题目描述 给你两个集合，要求{A} + {B}。
 *         注：同一个集合中不会有两个相同的元素。 输入描述:
 * 
 *         每组输入数据分为三行,第一行有两个数字n,m(0 ≤ n,m ≤
 *         10000)，分别表示集合A和集合B的元素个数。后两行分别表示集合A和集合B。每个元素为不超过int范围的整数,每个元素之间有个空格隔开。
 * 
 *         输出描述:
 * 
 *         针对每组数据输出一行数据，表示合并后的集合，要求从小到大输出，每个元素之间有一个空格隔开,行末无空格。
 */
public class Test09Collection {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		int c1Length = input.nextInt();
		int c2Length = input.nextInt();
		int[] c = new int[c1Length + c2Length];

		for (int i = 0; i < c.length; i++) {// 输入数字进数组
			c[i] = input.nextInt();
		}
		int[] out = bubbleSort(c);// 冒泡排序
		for (int i = 0; i < out.length; i++) {
			if (i != out.length - 1) {// 当索引不为末位时
				if (out[i] == out[i + 1]) {// 判断与下一位是否相同，相同结束本次输出
					continue;
				}
			}
			if (i == out.length - 1) {// 如果输出的为最后一位，不跟空格，否者跟空格。
				System.out.print(out[i]);
			} else {
				System.out.print(out[i] + " ");
			}
		}
	}

	public static int[] bubbleSort(int[] a) {// 冒泡排序
		int temp = 0;

		for (int i = a.length - 1; i > 0; --i) {
			for (int j = 0; j < i; ++j) {
				if (a[j + 1] < a[j]) {
					temp = a[j];
					a[j] = a[j + 1];
					a[j + 1] = temp;
				}
			}
		}
		return a;
	}

}